#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CMS_C
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CMS_Dev")]
	public partial class CMSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMonitoredInstance(MonitoredInstance instance);
    partial void UpdateMonitoredInstance(MonitoredInstance instance);
    partial void DeleteMonitoredInstance(MonitoredInstance instance);
    partial void InsertMonitoredServer(MonitoredServer instance);
    partial void UpdateMonitoredServer(MonitoredServer instance);
    partial void DeleteMonitoredServer(MonitoredServer instance);
    #endregion
		
		public CMSDataContext() : 
				base(global::CMS_C.Properties.Settings.Default.CMS_DevConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CMSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CMSDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CMSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CMSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MonitoredInstance> MonitoredInstances
		{
			get
			{
				return this.GetTable<MonitoredInstance>();
			}
		}
		
		public System.Data.Linq.Table<MonitoredServer> MonitoredServers
		{
			get
			{
				return this.GetTable<MonitoredServer>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MonitoredInstances")]
	public partial class MonitoredInstance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InstanceID;
		
		private System.Nullable<int> _ServerID;
		
		private string _InstanceName;
		
		private string _Environment;
		
		private System.Nullable<bool> _MonitorInstance;
		
		private string _Edition;
		
		private string _Version;
		
		private System.Nullable<bool> _isClustered;
		
		private System.Nullable<long> _MaxMemory;
		
		private System.Nullable<int> _MinMemory;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private string _ServiceAccount;
		
		private System.Nullable<System.DateTime> _DateUpdated;
		
		private System.Nullable<bool> _MonitorDatabases;
		
		private System.Nullable<bool> _MonitorBlocking;
		
		private System.Nullable<byte> _Criticality;
		
		private System.Nullable<bool> _SSAS;
		
		private System.Nullable<bool> _SSRS;
		
		private System.Nullable<bool> _Deleted;
		
		private System.Nullable<System.DateTime> _DateDeleted;
		
		private string _ProductLevel;
		
		private System.Nullable<bool> _PingStatus;
		
		private string _SSASStatus;
		
		private string _SSRSStatus;
		
		private string _AgentStatus;
		
		private System.Nullable<bool> _MonitorWaitStats;
		
		private System.Nullable<bool> _HasBaseline;
		
		private System.Nullable<System.DateTime> _BaselineStartDate;
		
		private System.Nullable<bool> _HasWaitsBaseline;
		
		private System.Nullable<System.DateTime> _WaitsBaselineStartDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInstanceIDChanging(int value);
    partial void OnInstanceIDChanged();
    partial void OnServerIDChanging(System.Nullable<int> value);
    partial void OnServerIDChanged();
    partial void OnInstanceNameChanging(string value);
    partial void OnInstanceNameChanged();
    partial void OnEnvironmentChanging(string value);
    partial void OnEnvironmentChanged();
    partial void OnMonitorInstanceChanging(System.Nullable<bool> value);
    partial void OnMonitorInstanceChanged();
    partial void OnEditionChanging(string value);
    partial void OnEditionChanged();
    partial void OnVersionChanging(string value);
    partial void OnVersionChanged();
    partial void OnisClusteredChanging(System.Nullable<bool> value);
    partial void OnisClusteredChanged();
    partial void OnMaxMemoryChanging(System.Nullable<long> value);
    partial void OnMaxMemoryChanged();
    partial void OnMinMemoryChanging(System.Nullable<int> value);
    partial void OnMinMemoryChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnServiceAccountChanging(string value);
    partial void OnServiceAccountChanged();
    partial void OnDateUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateUpdatedChanged();
    partial void OnMonitorDatabasesChanging(System.Nullable<bool> value);
    partial void OnMonitorDatabasesChanged();
    partial void OnMonitorBlockingChanging(System.Nullable<bool> value);
    partial void OnMonitorBlockingChanged();
    partial void OnCriticalityChanging(System.Nullable<byte> value);
    partial void OnCriticalityChanged();
    partial void OnSSASChanging(System.Nullable<bool> value);
    partial void OnSSASChanged();
    partial void OnSSRSChanging(System.Nullable<bool> value);
    partial void OnSSRSChanged();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    partial void OnDateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeletedChanged();
    partial void OnProductLevelChanging(string value);
    partial void OnProductLevelChanged();
    partial void OnPingStatusChanging(System.Nullable<bool> value);
    partial void OnPingStatusChanged();
    partial void OnSSASStatusChanging(string value);
    partial void OnSSASStatusChanged();
    partial void OnSSRSStatusChanging(string value);
    partial void OnSSRSStatusChanged();
    partial void OnAgentStatusChanging(string value);
    partial void OnAgentStatusChanged();
    partial void OnMonitorWaitStatsChanging(System.Nullable<bool> value);
    partial void OnMonitorWaitStatsChanged();
    partial void OnHasBaselineChanging(System.Nullable<bool> value);
    partial void OnHasBaselineChanged();
    partial void OnBaselineStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBaselineStartDateChanged();
    partial void OnHasWaitsBaselineChanging(System.Nullable<bool> value);
    partial void OnHasWaitsBaselineChanged();
    partial void OnWaitsBaselineStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnWaitsBaselineStartDateChanged();
    #endregion
		
		public MonitoredInstance()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstanceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InstanceID
		{
			get
			{
				return this._InstanceID;
			}
			set
			{
				if ((this._InstanceID != value))
				{
					this.OnInstanceIDChanging(value);
					this.SendPropertyChanging();
					this._InstanceID = value;
					this.SendPropertyChanged("InstanceID");
					this.OnInstanceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerID", DbType="Int")]
		public System.Nullable<int> ServerID
		{
			get
			{
				return this._ServerID;
			}
			set
			{
				if ((this._ServerID != value))
				{
					this.OnServerIDChanging(value);
					this.SendPropertyChanging();
					this._ServerID = value;
					this.SendPropertyChanged("ServerID");
					this.OnServerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstanceName", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string InstanceName
		{
			get
			{
				return this._InstanceName;
			}
			set
			{
				if ((this._InstanceName != value))
				{
					this.OnInstanceNameChanging(value);
					this.SendPropertyChanging();
					this._InstanceName = value;
					this.SendPropertyChanged("InstanceName");
					this.OnInstanceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Environment", DbType="VarChar(60)")]
		public string Environment
		{
			get
			{
				return this._Environment;
			}
			set
			{
				if ((this._Environment != value))
				{
					this.OnEnvironmentChanging(value);
					this.SendPropertyChanging();
					this._Environment = value;
					this.SendPropertyChanged("Environment");
					this.OnEnvironmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonitorInstance", DbType="Bit")]
		public System.Nullable<bool> MonitorInstance
		{
			get
			{
				return this._MonitorInstance;
			}
			set
			{
				if ((this._MonitorInstance != value))
				{
					this.OnMonitorInstanceChanging(value);
					this.SendPropertyChanging();
					this._MonitorInstance = value;
					this.SendPropertyChanged("MonitorInstance");
					this.OnMonitorInstanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Edition", DbType="VarChar(128)")]
		public string Edition
		{
			get
			{
				return this._Edition;
			}
			set
			{
				if ((this._Edition != value))
				{
					this.OnEditionChanging(value);
					this.SendPropertyChanging();
					this._Edition = value;
					this.SendPropertyChanged("Edition");
					this.OnEditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="VarChar(20)")]
		public string Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isClustered", DbType="Bit")]
		public System.Nullable<bool> isClustered
		{
			get
			{
				return this._isClustered;
			}
			set
			{
				if ((this._isClustered != value))
				{
					this.OnisClusteredChanging(value);
					this.SendPropertyChanging();
					this._isClustered = value;
					this.SendPropertyChanged("isClustered");
					this.OnisClusteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxMemory", DbType="BigInt")]
		public System.Nullable<long> MaxMemory
		{
			get
			{
				return this._MaxMemory;
			}
			set
			{
				if ((this._MaxMemory != value))
				{
					this.OnMaxMemoryChanging(value);
					this.SendPropertyChanging();
					this._MaxMemory = value;
					this.SendPropertyChanged("MaxMemory");
					this.OnMaxMemoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinMemory", DbType="Int")]
		public System.Nullable<int> MinMemory
		{
			get
			{
				return this._MinMemory;
			}
			set
			{
				if ((this._MinMemory != value))
				{
					this.OnMinMemoryChanging(value);
					this.SendPropertyChanging();
					this._MinMemory = value;
					this.SendPropertyChanged("MinMemory");
					this.OnMinMemoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceAccount", DbType="VarChar(60)")]
		public string ServiceAccount
		{
			get
			{
				return this._ServiceAccount;
			}
			set
			{
				if ((this._ServiceAccount != value))
				{
					this.OnServiceAccountChanging(value);
					this.SendPropertyChanging();
					this._ServiceAccount = value;
					this.SendPropertyChanged("ServiceAccount");
					this.OnServiceAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateUpdated
		{
			get
			{
				return this._DateUpdated;
			}
			set
			{
				if ((this._DateUpdated != value))
				{
					this.OnDateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._DateUpdated = value;
					this.SendPropertyChanged("DateUpdated");
					this.OnDateUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonitorDatabases", DbType="Bit")]
		public System.Nullable<bool> MonitorDatabases
		{
			get
			{
				return this._MonitorDatabases;
			}
			set
			{
				if ((this._MonitorDatabases != value))
				{
					this.OnMonitorDatabasesChanging(value);
					this.SendPropertyChanging();
					this._MonitorDatabases = value;
					this.SendPropertyChanged("MonitorDatabases");
					this.OnMonitorDatabasesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonitorBlocking", DbType="Bit")]
		public System.Nullable<bool> MonitorBlocking
		{
			get
			{
				return this._MonitorBlocking;
			}
			set
			{
				if ((this._MonitorBlocking != value))
				{
					this.OnMonitorBlockingChanging(value);
					this.SendPropertyChanging();
					this._MonitorBlocking = value;
					this.SendPropertyChanged("MonitorBlocking");
					this.OnMonitorBlockingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Criticality", DbType="TinyInt")]
		public System.Nullable<byte> Criticality
		{
			get
			{
				return this._Criticality;
			}
			set
			{
				if ((this._Criticality != value))
				{
					this.OnCriticalityChanging(value);
					this.SendPropertyChanging();
					this._Criticality = value;
					this.SendPropertyChanged("Criticality");
					this.OnCriticalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SSAS", DbType="Bit")]
		public System.Nullable<bool> SSAS
		{
			get
			{
				return this._SSAS;
			}
			set
			{
				if ((this._SSAS != value))
				{
					this.OnSSASChanging(value);
					this.SendPropertyChanging();
					this._SSAS = value;
					this.SendPropertyChanged("SSAS");
					this.OnSSASChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SSRS", DbType="Bit")]
		public System.Nullable<bool> SSRS
		{
			get
			{
				return this._SSRS;
			}
			set
			{
				if ((this._SSRS != value))
				{
					this.OnSSRSChanging(value);
					this.SendPropertyChanging();
					this._SSRS = value;
					this.SendPropertyChanged("SSRS");
					this.OnSSRSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit")]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDeleted
		{
			get
			{
				return this._DateDeleted;
			}
			set
			{
				if ((this._DateDeleted != value))
				{
					this.OnDateDeletedChanging(value);
					this.SendPropertyChanging();
					this._DateDeleted = value;
					this.SendPropertyChanged("DateDeleted");
					this.OnDateDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductLevel", DbType="VarChar(10)")]
		public string ProductLevel
		{
			get
			{
				return this._ProductLevel;
			}
			set
			{
				if ((this._ProductLevel != value))
				{
					this.OnProductLevelChanging(value);
					this.SendPropertyChanging();
					this._ProductLevel = value;
					this.SendPropertyChanged("ProductLevel");
					this.OnProductLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PingStatus", DbType="Bit")]
		public System.Nullable<bool> PingStatus
		{
			get
			{
				return this._PingStatus;
			}
			set
			{
				if ((this._PingStatus != value))
				{
					this.OnPingStatusChanging(value);
					this.SendPropertyChanging();
					this._PingStatus = value;
					this.SendPropertyChanged("PingStatus");
					this.OnPingStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SSASStatus", DbType="VarChar(20)")]
		public string SSASStatus
		{
			get
			{
				return this._SSASStatus;
			}
			set
			{
				if ((this._SSASStatus != value))
				{
					this.OnSSASStatusChanging(value);
					this.SendPropertyChanging();
					this._SSASStatus = value;
					this.SendPropertyChanged("SSASStatus");
					this.OnSSASStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SSRSStatus", DbType="VarChar(20)")]
		public string SSRSStatus
		{
			get
			{
				return this._SSRSStatus;
			}
			set
			{
				if ((this._SSRSStatus != value))
				{
					this.OnSSRSStatusChanging(value);
					this.SendPropertyChanging();
					this._SSRSStatus = value;
					this.SendPropertyChanged("SSRSStatus");
					this.OnSSRSStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgentStatus", DbType="VarChar(20)")]
		public string AgentStatus
		{
			get
			{
				return this._AgentStatus;
			}
			set
			{
				if ((this._AgentStatus != value))
				{
					this.OnAgentStatusChanging(value);
					this.SendPropertyChanging();
					this._AgentStatus = value;
					this.SendPropertyChanged("AgentStatus");
					this.OnAgentStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonitorWaitStats", DbType="Bit")]
		public System.Nullable<bool> MonitorWaitStats
		{
			get
			{
				return this._MonitorWaitStats;
			}
			set
			{
				if ((this._MonitorWaitStats != value))
				{
					this.OnMonitorWaitStatsChanging(value);
					this.SendPropertyChanging();
					this._MonitorWaitStats = value;
					this.SendPropertyChanged("MonitorWaitStats");
					this.OnMonitorWaitStatsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasBaseline", DbType="Bit")]
		public System.Nullable<bool> HasBaseline
		{
			get
			{
				return this._HasBaseline;
			}
			set
			{
				if ((this._HasBaseline != value))
				{
					this.OnHasBaselineChanging(value);
					this.SendPropertyChanging();
					this._HasBaseline = value;
					this.SendPropertyChanged("HasBaseline");
					this.OnHasBaselineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaselineStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BaselineStartDate
		{
			get
			{
				return this._BaselineStartDate;
			}
			set
			{
				if ((this._BaselineStartDate != value))
				{
					this.OnBaselineStartDateChanging(value);
					this.SendPropertyChanging();
					this._BaselineStartDate = value;
					this.SendPropertyChanged("BaselineStartDate");
					this.OnBaselineStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasWaitsBaseline", DbType="Bit")]
		public System.Nullable<bool> HasWaitsBaseline
		{
			get
			{
				return this._HasWaitsBaseline;
			}
			set
			{
				if ((this._HasWaitsBaseline != value))
				{
					this.OnHasWaitsBaselineChanging(value);
					this.SendPropertyChanging();
					this._HasWaitsBaseline = value;
					this.SendPropertyChanged("HasWaitsBaseline");
					this.OnHasWaitsBaselineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaitsBaselineStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> WaitsBaselineStartDate
		{
			get
			{
				return this._WaitsBaselineStartDate;
			}
			set
			{
				if ((this._WaitsBaselineStartDate != value))
				{
					this.OnWaitsBaselineStartDateChanging(value);
					this.SendPropertyChanging();
					this._WaitsBaselineStartDate = value;
					this.SendPropertyChanged("WaitsBaselineStartDate");
					this.OnWaitsBaselineStartDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MonitoredServers")]
	public partial class MonitoredServer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ServerID;
		
		private string _ServerName;
		
		private string _Environment;
		
		private System.Nullable<bool> _MonitorServer;
		
		private System.Nullable<long> _TotalMemory;
		
		private string _Manufacturer;
		
		private string _Model;
		
		private string _IPAddress;
		
		private string _OperatingSystem;
		
		private System.Nullable<byte> _BitLevel;
		
		private System.Nullable<System.DateTime> _DateInstalled;
		
		private System.Nullable<byte> _NumberofProcessors;
		
		private System.Nullable<byte> _NumberofProcessorCores;
		
		private System.Nullable<short> _ProcessorClockSpeed;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateUpdated;
		
		private System.Nullable<System.DateTime> _DateLastBoot;
		
		private System.Nullable<bool> _MonitorDrives;
		
		private System.Nullable<bool> _PingStatus;
		
		private System.Nullable<bool> _Deleted;
		
		private System.Nullable<System.DateTime> _DateDeleted;
		
		private System.Nullable<bool> _IsVirtualServerName;
		
		private System.Nullable<bool> _HasBaseline;
		
		private System.Nullable<System.DateTime> _BaselineStartDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServerIDChanging(int value);
    partial void OnServerIDChanged();
    partial void OnServerNameChanging(string value);
    partial void OnServerNameChanged();
    partial void OnEnvironmentChanging(string value);
    partial void OnEnvironmentChanged();
    partial void OnMonitorServerChanging(System.Nullable<bool> value);
    partial void OnMonitorServerChanged();
    partial void OnTotalMemoryChanging(System.Nullable<long> value);
    partial void OnTotalMemoryChanged();
    partial void OnManufacturerChanging(string value);
    partial void OnManufacturerChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnOperatingSystemChanging(string value);
    partial void OnOperatingSystemChanged();
    partial void OnBitLevelChanging(System.Nullable<byte> value);
    partial void OnBitLevelChanged();
    partial void OnDateInstalledChanging(System.Nullable<System.DateTime> value);
    partial void OnDateInstalledChanged();
    partial void OnNumberofProcessorsChanging(System.Nullable<byte> value);
    partial void OnNumberofProcessorsChanged();
    partial void OnNumberofProcessorCoresChanging(System.Nullable<byte> value);
    partial void OnNumberofProcessorCoresChanged();
    partial void OnProcessorClockSpeedChanging(System.Nullable<short> value);
    partial void OnProcessorClockSpeedChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateUpdatedChanged();
    partial void OnDateLastBootChanging(System.Nullable<System.DateTime> value);
    partial void OnDateLastBootChanged();
    partial void OnMonitorDrivesChanging(System.Nullable<bool> value);
    partial void OnMonitorDrivesChanged();
    partial void OnPingStatusChanging(System.Nullable<bool> value);
    partial void OnPingStatusChanged();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    partial void OnDateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeletedChanged();
    partial void OnIsVirtualServerNameChanging(System.Nullable<bool> value);
    partial void OnIsVirtualServerNameChanged();
    partial void OnHasBaselineChanging(System.Nullable<bool> value);
    partial void OnHasBaselineChanged();
    partial void OnBaselineStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBaselineStartDateChanged();
    #endregion
		
		public MonitoredServer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ServerID
		{
			get
			{
				return this._ServerID;
			}
			set
			{
				if ((this._ServerID != value))
				{
					this.OnServerIDChanging(value);
					this.SendPropertyChanging();
					this._ServerID = value;
					this.SendPropertyChanged("ServerID");
					this.OnServerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerName", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string ServerName
		{
			get
			{
				return this._ServerName;
			}
			set
			{
				if ((this._ServerName != value))
				{
					this.OnServerNameChanging(value);
					this.SendPropertyChanging();
					this._ServerName = value;
					this.SendPropertyChanged("ServerName");
					this.OnServerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Environment", DbType="VarChar(60)")]
		public string Environment
		{
			get
			{
				return this._Environment;
			}
			set
			{
				if ((this._Environment != value))
				{
					this.OnEnvironmentChanging(value);
					this.SendPropertyChanging();
					this._Environment = value;
					this.SendPropertyChanged("Environment");
					this.OnEnvironmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonitorServer", DbType="Bit")]
		public System.Nullable<bool> MonitorServer
		{
			get
			{
				return this._MonitorServer;
			}
			set
			{
				if ((this._MonitorServer != value))
				{
					this.OnMonitorServerChanging(value);
					this.SendPropertyChanging();
					this._MonitorServer = value;
					this.SendPropertyChanged("MonitorServer");
					this.OnMonitorServerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalMemory", DbType="BigInt")]
		public System.Nullable<long> TotalMemory
		{
			get
			{
				return this._TotalMemory;
			}
			set
			{
				if ((this._TotalMemory != value))
				{
					this.OnTotalMemoryChanging(value);
					this.SendPropertyChanging();
					this._TotalMemory = value;
					this.SendPropertyChanged("TotalMemory");
					this.OnTotalMemoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacturer", DbType="VarChar(128)")]
		public string Manufacturer
		{
			get
			{
				return this._Manufacturer;
			}
			set
			{
				if ((this._Manufacturer != value))
				{
					this.OnManufacturerChanging(value);
					this.SendPropertyChanging();
					this._Manufacturer = value;
					this.SendPropertyChanged("Manufacturer");
					this.OnManufacturerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(128)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="VarChar(15)")]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperatingSystem", DbType="VarChar(128)")]
		public string OperatingSystem
		{
			get
			{
				return this._OperatingSystem;
			}
			set
			{
				if ((this._OperatingSystem != value))
				{
					this.OnOperatingSystemChanging(value);
					this.SendPropertyChanging();
					this._OperatingSystem = value;
					this.SendPropertyChanged("OperatingSystem");
					this.OnOperatingSystemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BitLevel", DbType="TinyInt")]
		public System.Nullable<byte> BitLevel
		{
			get
			{
				return this._BitLevel;
			}
			set
			{
				if ((this._BitLevel != value))
				{
					this.OnBitLevelChanging(value);
					this.SendPropertyChanging();
					this._BitLevel = value;
					this.SendPropertyChanged("BitLevel");
					this.OnBitLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInstalled", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateInstalled
		{
			get
			{
				return this._DateInstalled;
			}
			set
			{
				if ((this._DateInstalled != value))
				{
					this.OnDateInstalledChanging(value);
					this.SendPropertyChanging();
					this._DateInstalled = value;
					this.SendPropertyChanged("DateInstalled");
					this.OnDateInstalledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberofProcessors", DbType="TinyInt")]
		public System.Nullable<byte> NumberofProcessors
		{
			get
			{
				return this._NumberofProcessors;
			}
			set
			{
				if ((this._NumberofProcessors != value))
				{
					this.OnNumberofProcessorsChanging(value);
					this.SendPropertyChanging();
					this._NumberofProcessors = value;
					this.SendPropertyChanged("NumberofProcessors");
					this.OnNumberofProcessorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberofProcessorCores", DbType="TinyInt")]
		public System.Nullable<byte> NumberofProcessorCores
		{
			get
			{
				return this._NumberofProcessorCores;
			}
			set
			{
				if ((this._NumberofProcessorCores != value))
				{
					this.OnNumberofProcessorCoresChanging(value);
					this.SendPropertyChanging();
					this._NumberofProcessorCores = value;
					this.SendPropertyChanged("NumberofProcessorCores");
					this.OnNumberofProcessorCoresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessorClockSpeed", DbType="SmallInt")]
		public System.Nullable<short> ProcessorClockSpeed
		{
			get
			{
				return this._ProcessorClockSpeed;
			}
			set
			{
				if ((this._ProcessorClockSpeed != value))
				{
					this.OnProcessorClockSpeedChanging(value);
					this.SendPropertyChanging();
					this._ProcessorClockSpeed = value;
					this.SendPropertyChanged("ProcessorClockSpeed");
					this.OnProcessorClockSpeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateUpdated
		{
			get
			{
				return this._DateUpdated;
			}
			set
			{
				if ((this._DateUpdated != value))
				{
					this.OnDateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._DateUpdated = value;
					this.SendPropertyChanged("DateUpdated");
					this.OnDateUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastBoot", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateLastBoot
		{
			get
			{
				return this._DateLastBoot;
			}
			set
			{
				if ((this._DateLastBoot != value))
				{
					this.OnDateLastBootChanging(value);
					this.SendPropertyChanging();
					this._DateLastBoot = value;
					this.SendPropertyChanged("DateLastBoot");
					this.OnDateLastBootChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonitorDrives", DbType="Bit")]
		public System.Nullable<bool> MonitorDrives
		{
			get
			{
				return this._MonitorDrives;
			}
			set
			{
				if ((this._MonitorDrives != value))
				{
					this.OnMonitorDrivesChanging(value);
					this.SendPropertyChanging();
					this._MonitorDrives = value;
					this.SendPropertyChanged("MonitorDrives");
					this.OnMonitorDrivesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PingStatus", DbType="Bit")]
		public System.Nullable<bool> PingStatus
		{
			get
			{
				return this._PingStatus;
			}
			set
			{
				if ((this._PingStatus != value))
				{
					this.OnPingStatusChanging(value);
					this.SendPropertyChanging();
					this._PingStatus = value;
					this.SendPropertyChanged("PingStatus");
					this.OnPingStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit")]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDeleted
		{
			get
			{
				return this._DateDeleted;
			}
			set
			{
				if ((this._DateDeleted != value))
				{
					this.OnDateDeletedChanging(value);
					this.SendPropertyChanging();
					this._DateDeleted = value;
					this.SendPropertyChanged("DateDeleted");
					this.OnDateDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVirtualServerName", DbType="Bit")]
		public System.Nullable<bool> IsVirtualServerName
		{
			get
			{
				return this._IsVirtualServerName;
			}
			set
			{
				if ((this._IsVirtualServerName != value))
				{
					this.OnIsVirtualServerNameChanging(value);
					this.SendPropertyChanging();
					this._IsVirtualServerName = value;
					this.SendPropertyChanged("IsVirtualServerName");
					this.OnIsVirtualServerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasBaseline", DbType="Bit")]
		public System.Nullable<bool> HasBaseline
		{
			get
			{
				return this._HasBaseline;
			}
			set
			{
				if ((this._HasBaseline != value))
				{
					this.OnHasBaselineChanging(value);
					this.SendPropertyChanging();
					this._HasBaseline = value;
					this.SendPropertyChanged("HasBaseline");
					this.OnHasBaselineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaselineStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BaselineStartDate
		{
			get
			{
				return this._BaselineStartDate;
			}
			set
			{
				if ((this._BaselineStartDate != value))
				{
					this.OnBaselineStartDateChanging(value);
					this.SendPropertyChanging();
					this._BaselineStartDate = value;
					this.SendPropertyChanged("BaselineStartDate");
					this.OnBaselineStartDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
